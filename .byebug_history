c
params
api
product
c
params
c
product_params
c
self.title
title
c
current_user.products
current_user.products.methords.sort
current_user
params
c
user.valid_password
user_password
user.methords.sort
user
params
c
self.product.quantity
self.product.decrement
c
self.product
self.product.quantity
c
self.product.quantity
c
self.total
c
self.total
c
params[:order]
c
params
c
 order.build_placements_with_product_ids_and_quantities(params[:order][:product_ids_and_quantities])
params
c
params
c
params
c
params
c
quantities
c
params
c
self.quantity
quantity
c
product
product_params
c
params
c
cc
c
cc
c
order.placements
order
c
self.placements
c
self
self.placements
placements
placement
placement.product
self
self.
c
n
c
 self.total+=placement.product.price * placement.quantity
placements.quantity
placements
self.total
c
 self.placements.build(product_id: id,quantity: quantities)
c
self.placements.methods.sort
product_ids_and_quantities.split(",")
product_ids_and_quantity
quantities
quantity
id
c
self.total
c
self.products
self.placements
self.placements.product
self.placements.product.map(&:price)
self.placements.product.map(&:price).sum
self.placements.product
self.placements.products
self.placements
self
self.products
self
self.placements
products
self.placements.methods.sort
self.placements
self.placements.products
self.products
placements.all.products
placements.all
placements.products
placements
products
self
c
self.total
self.total(&:price)
self.total(&:price).sum
products.map
self.total
c
Placement
self.placements.build(product_id: id,quantity: quantities)
Placement
self.placements
self.placements.methods.sort
self.placements
self.methods.sort
Placement
 build_placements_with_product_ids_and_quantities(product_ids_and_quantities)
self.quantity
product_id
c
self.placements.build(product_id: id,quantities: quantities)
self.order
self.orders
self.placements
c
product_ids_and_quantities:product_ids_and_quantities
product_ids_and_quantities
order.build_placements_with_product_ids_and_quantities(params[:order][:product_ids_and_quantities])
c
order.methods.sort
order.build
c
order.build_placements_with_product_ids_and_quantities(params[:order][:product_ids_and_quantities])c
order.build_placements_with_product_ids_and_quantities(params[:order][:product_ids_and_quantities])
params[:order][:product_ids_and_quantities]
order.build_placements_with_product_ids_and_quantities
order.methods.sort
c
current_user
params
c
params
c
params
c
user_password
c
params
c
product_ids_and_quantities
params
c
product_ids_and_quantities
current_user.order.build
current_user.orders
current_user.order
current_user
c
orders
order
params
c
params
order
c
params
c
product
c
params
user_email
c
params
c
product
params
c
product
params
c
user_email
user_password
params
c
self.errors.messages
c
self.title.errors.message
c
va = self.title.start_with? "DA"
va = self.title.start_with "DA"
 Va_ti:self
 Va_ti
self.name:title.start_with?('DA','da','ra')
if((self.title.start_with?('D')) render
if((self.title.start_with?('D'))
self.title.start_with?('Da')
self.title.start_with?('Da')=>true
self.title.start_with?('Da')
self.title.start_with('Da')
self.title.start_with('Da')=>true
self.title.start_with('Da')
self.title.Start_with
self.title.Start_with(:D)
self.title.Start_with
self.title.methods.sort
self.title
self.name
self
c
params
:title
title
c
product_params
product
c
params
c
params
c
params
param
params
c
current_user
c
params
c
params
c
params
c
user_password
params[:session]
params
params[:user][:password]
user_password
uer_password
user_password
